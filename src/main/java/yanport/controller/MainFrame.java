package yanport.controller;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.util.Objects;

/**
 * Main frame class, allows user input and launch the application
 */
class MainFrame {
    private JPanel StartPanel;
    private JButton launchButton; // Start Button
    private JComboBox cardBox; // Directions box
    private JSpinner posYValue, gridWidth, posXValue, gridHeight; // values for the fields  "x", "y", "Width" anf "Height"
    private JLabel posX, posY, width, height, card; // different Labels
    private JTextField instructions; // Text field for the instructions
    private final Dimension dimension;

    /**
     * constructor for the main frame, uses MainFrameController as an ActionListener for the launchButton
     *
     * @param config HooverConfig the application process
     */
    MainFrame(HooverConfig config) {
        Objects.requireNonNull(config);
        launchButton.addActionListener(new MainFrameController(posYValue, gridWidth, posXValue, gridHeight, cardBox, StartPanel, instructions, config));
        this.dimension = config.getAppDimension();
    }

    /**
     * the main frame initialisation methode
     *
     * @param frame new frame for the main window
     */
    void initFrame(JFrame frame) {
        Objects.requireNonNull(frame);
        frame.add(this.StartPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setPreferredSize(dimension);
        frame.setResizable(false);
        frame.pack();
        frame.setVisible(true);
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        StartPanel = new JPanel();
        StartPanel.setLayout(new GridBagLayout());
        StartPanel.setEnabled(true);
        StartPanel.putClientProperty("html.disable", Boolean.FALSE);
        launchButton = new JButton();
        launchButton.setEnabled(true);
        launchButton.setHorizontalAlignment(0);
        launchButton.setText("Start");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.gridwidth = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.insets = new Insets(0, 0, 0, 50);
        StartPanel.add(launchButton, gbc);
        card = new JLabel();
        card.setText("card");
        card.setVerticalAlignment(0);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        StartPanel.add(card, gbc);
        cardBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("North (N)");
        defaultComboBoxModel1.addElement("South (S)");
        defaultComboBoxModel1.addElement("East  (E)");
        defaultComboBoxModel1.addElement("West  (W)");
        cardBox.setModel(defaultComboBoxModel1);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        StartPanel.add(cardBox, gbc);
        height = new JLabel();
        height.setText("height");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        StartPanel.add(height, gbc);
        gridWidth = new JSpinner();
        gridWidth.setMaximumSize(new Dimension(120, 31));
        gridWidth.setMinimumSize(new Dimension(120, 31));
        gridWidth.setPreferredSize(new Dimension(120, 31));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        StartPanel.add(gridWidth, gbc);
        gridHeight = new JSpinner();
        gridHeight.setMaximumSize(new Dimension(120, 31));
        gridHeight.setMinimumSize(new Dimension(120, 31));
        gridHeight.setPreferredSize(new Dimension(120, 31));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        StartPanel.add(gridHeight, gbc);
        posXValue = new JSpinner();
        posXValue.setMaximumSize(new Dimension(120, 31));
        posXValue.setMinimumSize(new Dimension(120, 31));
        posXValue.setPreferredSize(new Dimension(120, 31));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        StartPanel.add(posXValue, gbc);
        posYValue = new JSpinner();
        posYValue.setMaximumSize(new Dimension(120, 31));
        posYValue.setMinimumSize(new Dimension(120, 31));
        posYValue.setPreferredSize(new Dimension(120, 31));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        StartPanel.add(posYValue, gbc);
        posX = new JLabel();
        posX.setText("x");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        StartPanel.add(posX, gbc);
        posY = new JLabel();
        posY.setText("y");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        StartPanel.add(posY, gbc);
        instructions = new JTextField();
        instructions.setEditable(true);
        instructions.setEnabled(true);
        instructions.setHorizontalAlignment(0);
        instructions.setPreferredSize(new Dimension(102, 35));
        instructions.setText("instructions");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 4;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 0, 20);
        StartPanel.add(instructions, gbc);
        width = new JLabel();
        width.setText("width");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        StartPanel.add(width, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return StartPanel;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
